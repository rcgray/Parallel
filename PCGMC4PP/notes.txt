Done
	Expand level grammar
		Idependent problems
		Serialization
		Parallelization
	Topic "problems" and "situations" grammar
		Trivial task (pickup and delivery)
		Critical section (pickup and delivery with mutex)
		Syncronization (pickup, delivery, exchange points)
	Refinement grammar
		Loops
		Threads
		Pickup, Delivery
		Directions
		Deadend Loop
		Conditionals
		Diverters
		Deadlocks
TODO
	Needed
		For deadlocks, I really need to be able to place things that the player won't be able to move
	Refinements
		Rotate tall levels 90 degrees
		Add colors (per-situation) and color restrictions
	Topics
		Syncronization between independent problems
		...
		use To in situations to have a diverter in the first one and something that requires 2 threads in the second
	Player Modeling
		Tracking integration
	ME
		Try to detect "infinite loop" better and stop simulation earlier.

Caveat:
	PCG generates a solution but may not be the only nor MINIMAL solution.
	
Measure complexity:
	How many ratio of leaves is deadlock?
	How many steps does it take to reach deadlock?

Bugs
<<<<<<< HEAD
	when applying SIMPLE_DEADLOCK the signals are not linked to the semaphores
=======
>>>>>>> e9e2bcffd5f335ecd57889a085bfd1733c82c50c
	hey josep I wanted to check - when I submit level 9, right?  For some reason I'm not getting those types of execution steps I should see a line like
		"D exchange_between_b":1001,"exchange_between_a":1002"
	when testing/submitting, the ME gives a successful solution before all the packages required have actually been delivered
	set paths for PCG grammar files on windows builds


Improvements
	(partially addressed) the ME will take a while (will execute N iterations) to complain about a misdelivery that happened early
		Level 4: No screen shown, continuing delivering packages
	intersection components are now redundant and prevent other components to be placed, remove from hand authored levels (and parse directions properly in ME?) 

